!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var i="http://www.w3.org/2000/svg",o=function(){throw new Error("Progress component is missing parameter")},s=["normal","animated","hidden"],a=90,l=a*Math.PI*2,u=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:o(),n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"normal";if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!document.getElementById(t))throw new Error("There is no element with id "+t+" in DOM");if(!s.includes(r))throw new Error("List of modes includes only: normal, animated, hidden");(n<0||n>100)&&(n=50),this.containerId=t,this.value=n,this.mode=r,this.animated="",this.init()}return r(e,[{key:"init",value:function(){var e=document.getElementById(this.containerId),t=function(){var e=document.createElementNS(i,"svg");return e.setAttributeNS(null,"id","progress"),e.setAttributeNS(null,"class","progress-bar"),e.setAttributeNS(null,"width","200"),e.setAttributeNS(null,"height","200"),e.setAttributeNS(null,"version","1.1"),e.setAttributeNS(null,"viewPort","0 0 100 100"),e.style.transform="rotate(-90deg)",e}(),n=c("inner",this.value),r=c("outer",this.value);t.appendChild(n),t.appendChild(r),e.appendChild(t)}},{key:"setValue",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return!(e<0||e>100)&&(e!==this.value&&"normal"===this.mode&&(!!e.match(/\d+/g)&&(this._value=e,!0)))}},{key:"setMod",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"normal",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";this.mode=e,this.animated=t;var n,r,i,o=this.containerId;document.querySelector("#"+o+" svg");switch(e){case"normal":f(this.circleDOM),function(e){m(document.querySelector("#"+e+" svg"),1e3,"in")}(this.containerId);break;case"animated":"yes"===t?(n=this.circleDOM,r=1e3,i={start:performance.now(),total:r},d=requestAnimationFrame(function e(t){i.elapsed=t-i.start;var r=h(i);n.style.transform="rotate("+360*r+"deg)",1==r&&(i.start=t),d=requestAnimationFrame(e)})):f(this.circleDOM);break;case"hidden":!function(e){m(document.querySelector("#"+e+" svg"),1e3,"out")}(this.containerId)}}},{key:"_value",set:function(e){if(this.circleDOM){var t=this.circleDOM,n=(100-e)/100*l;t.style.strokeDashoffset=n}this.value=e}},{key:"circleDOM",get:function(){var e=this.containerId;return document.querySelector("#"+e+" .progress-bar__circle--outer")}}]),e}();function c(e,t){var n=document.createElementNS(i,"circle"),r=(100-t)/100*l;switch(n.style.strokeDashoffset=0,n.style.transition="stroke-dashoffset .25s ease",n.style.stroke="#cccccc",n.style.strokeWidth="20px",n.style.transformOrigin="center center",n.setAttributeNS(null,"cx",100),n.setAttributeNS(null,"cy",100),n.setAttributeNS(null,"r",a),n.setAttributeNS(null,"stroke-dasharray",l),n.setAttributeNS(null,"fill","transparent"),n.setAttributeNS(null,"stroke-dashoffset",100),e){case"inner":n.setAttributeNS(null,"class","progress-bar__circle progress-bar__circle--inner");break;case"outer":n.setAttributeNS(null,"class","progress-bar__circle progress-bar__circle--outer"),n.style.stroke="#ffdb4d",n.style.strokeLinecap="round",n.style.strokeDashoffset=r}return n}var d=null,h=function(e){var t=e.elapsed,n=e.total;return Math.min(t/n,1)};function f(e){e.style.transform="rotate(-90deg)",cancelAnimationFrame(d)}function m(e,t,n){var r={start:performance.now(),total:t};requestAnimationFrame(function t(i){r.elapsed=i-r.start;var o=h(r),s=function(e){return Math.pow(2,-10*e)*Math.sin(5*(e-.1)*Math.PI)+1}(o);"in"===n?e.style.transform="scale("+s+")":"out"===n&&(e.style.transform="scale("+(1-s)+")"),1!=o&&requestAnimationFrame(t)})}t.default=u},function(e,t,n){"use strict";n(6);var r,i=n(0),o=(r=i)&&r.__esModule?r:{default:r};document.addEventListener("DOMContentLoaded",function(){var e=new o.default("container");console.log(e),e.setMod("normal");var t=document.getElementById("input-value"),n=document.getElementById("switch-animate"),r=document.getElementById("switch-hide");t.oninput=function(t){parseInt(this.value);this.value>100?this.value=this.value.slice(0,2):e.setValue(this.value)},n.onchange=function(t){this.checked?e.setMod("animated","yes"):e.setMod("normal")},r.onchange=function(t){this.checked?e.setMod("hidden"):e.setMod("normal")}})},,,,,function(e,t){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,